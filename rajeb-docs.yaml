openapi: 3.0.0
info:
  title: RAJEB
  description: REST API for JEB Express
  version: 0.1.0
servers:
  - url: http
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /users:
    post:
      summary: Add new user
      tags:
        - user
      description: ""
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              properties:
                fullName:
                  type: string
                  example: Masandy Hariyanto
                phoneNumber:
                  type: string
                  example: "081334559782"
                email:
                  type: string
                  example: masmasandy@gmail.com
                password:
                  type: string
                  example: themostepicpasswordofalltime
                permissionLevel:
                  type: string
                  example: 1

      responses:
        200: # status code
          description: A JSON array of output data
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  output:
                    type: object
                    properties:
                      id:
                        type: string
                        description: This is the User ID
                      accessToken:
                        type: string
                        description: the token created is used as a new user login
                      refreshToken:
                        type: string
                        description: need to pass this token to create new accessToken at /auth/refresh
    get:
      security:
        - bearerAuth: []
      summary: Find all user
      tags:
        - user
      description: get all data user from server, minimum permission level Admin or Super User
      responses:
        200:
          description: Object users
  /users/{userId}:
    get:
      parameters:
        - in: path
          name: userId
          schema: 
            type: string
          required: true
      security:
        - bearerAuth: []
      summary: Find one user
      description: Need accessToken
      tags:
        - user
      responses:
        200:
          description: Object single user
  /auth:
    post:
      summary: To get accessToken and refreshToken
      description: Get the access token and refresh token using email and password
      tags:
        - auth
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: accessToken and refreshToken
          content:
            application/json:
              schema:
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
  /auth/refresh:
    post:
      security:
        - bearerAuth: []
      summary: To get accessToken
      description: Get access token using refresh token and need previous authorization header to process
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                refresh_token:
                  type: string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
  /orders:
    post:
      tags:
        - order
      summary: Create new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                senderFullName:
                  type: string
                senderPhoneNumber:
                  type: string
                senderOriginId:
                  type: string
                senderAddress:
                  type: string
                senderPostCode:
                  type: string
                recipientFullName:
                  type: string
                recipientPhoneNumber:
                  type: string
                recipientDestinationId:
                  type: string
                recipientAddress:
                  type: string
                recipientPostCode:
                  type: string
                serviceId:
                  type: string
                itemName:
                  type: string
                itemTypeId:
                  type: string
                itemWeight:
                  type: number
                itemQty: 
                  type: number
                itemWidth:
                  type: number
                itemHeight:
                  type: number
                itemLong:
                  type: number
                itemValue:
                  type: number
                insurance:
                  type: boolean
                voucherId:
                  type: string

      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  awbNumber:
                    type: string
                  billingId:
                    type: string
  /tracking:
    get:
      tags:
        - order
      summary: Tracking data order
      parameters:
        - in: query
          name: id
          schema:
            type: string
            example: JR791703100001,JR791703100002
          required: true
          description: awbNumber separated by coma for multiple data
      responses: 
        200:
          description: ok
          content:
            application/json:
              schema:
                properties:
                  orderData:
                    type: object
                    properties:
                      Trackings: 
                        type: array
